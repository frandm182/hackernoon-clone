{"version":3,"sources":["store/app/actions.js","store/app/reducer.js","services/Api.js","services/hackerNewsApi.js","store/story/actions.js","store/story/reducer.js","store/reducer.js","store/middleware.js","store/index.js","styles/palette.js","utils/getSiteHostname.js","utils/getArticleLink.js","components/ListItem/styles.js","components/ListItem/index.js","components/List/styles.js","components/List/index.js","components/Loader/styles.js","components/Loader/index.js","components/App/styles.js","styles/mediaQueries.js","components/App/App.js","store/story/selectors.js","components/App/index.js","styles/globals.js","serviceWorker.js","index.js"],"names":["actionTypes","SET_THEME","concat","app","state","arguments","length","undefined","theme","_ref","type","payload","Object","objectSpread","API_ROOT","process","URL","TIMEOUT","HEADERS","Content-Type","Accept","client","ApiService","_ref$baseURL","baseURL","_ref$timeout","timeout","_ref$headers","headers","auth","classCallCheck","this","axios","create","interceptors","response","use","handleSuccess","handleError","error","Promise","reject","path","get","then","data","post","put","patch","delete","hackerNewsApi","getTopStoryIds","getStory","id","getStoriesByPage","ids","page","_getPageSlice","limit","begin","end","getPageSlice","storyPromises","items","slice","getPageValues","map","all","NS","FETCH_STORY_IDS_REQUEST","FETCH_STORY_IDS_SUCCESS","FETCH_STORY_IDS_FAILURE","FETCH_STORIES_REQUEST","FETCH_STORIES_SUCCESS","FETCH_STORIES_FAILURE","action","actions","fetchStoryIds","dispatch","storyIds","fetchStories","catch","err","stories","story","isFetching","toConsumableArray","rootReducer","combineReducers","middlewareList","devTool","window","devToolsExtension","f","push","thunk","middleware","compose","applyMiddleware","apply","configureStore","initialState","createStore","reducer","colorsDark","background","backgroundSecondary","text","textSecondary","border","getSiteHostname","siteUrl","hostname","includes","url","parse","split","HN_ROOT","HN_ITEM","HN_USER","getArticleLink","commentUrl","Item","styled","li","_templateObject","Title","h3","_templateObject2","_ref2","Host","span","_templateObject3","_ref3","ExternalLink","a","_templateObject4","_ref4","Description","div","_templateObject5","_ref5","CommentLink","_templateObject6","_ref6","_ref7","timeago","Timeago","LINK_REL","ListItem","by","_ref$kids","kids","title","score","time","site","link","userUrl","react_default","createElement","href","rel","target","format","Date","toISOString","ListWrapper","styles_templateObject","List","components_ListItem","assign","key","blink","keyframes","Loader_styles_templateObject","Animation","styles_templateObject2","Loader","Wrapper","App_styles_templateObject","h1","App_styles_templateObject2","App","_this$props","_this","props","fetchStoriesFirstPage","_this$props2","hasMoreStories","styled_components_browser_esm","styles_Title","lib_default","dataLength","next","hasMore","loader","components_Loader","style","height","overflow","components_List","Component","hasMoreStoriesSelector","createSelector","connect","setGlobalStyles","createGlobalStyle","globals_templateObject","Boolean","location","match","store","ReactDOM","render","es","Fragment","globals","components_App","document","getElementById","renderApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.429105c4.chunk.js","sourcesContent":["const NS ='@hnReader/app';\n\nexport const actionTypes = {\n    SET_THEME: `${NS}/SET_THEME`,\n};\n\nconst actions = {\n    setTheme: (payload = {}) => ({ type: actionTypes.SET_THEME, payload }),\n};\n\nexport default actions;","import { actionTypes } from \"./actions\";\n\nconst getInitialState = () => ({\n  theme: 'dark',\n});\n\nconst app = (state = getInitialState(), { type, payload }) => {\n  switch (type) {\n    case actionTypes.SET_THEME:\n      return {\n        ...state,\n        ...payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default app;\n","import axios from 'axios';\n\n// Default API will be your root\nconst API_ROOT = process.env.URL || 'http://localhost:3000/';\nconst TIMEOUT = 20000;\nconst HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n};\n\nclass ApiService {\n  constructor({ baseURL = API_ROOT, timeout = TIMEOUT, headers = HEADERS, auth }) {\n    const client = axios.create({\n      baseURL,\n      timeout,\n      headers,\n      auth,\n    });\n\n    client.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.client = client;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  handleError(error) {\n    return Promise.reject(error);\n  }\n\n  get(path) {\n    return this.client.get(path).then(response => response.data);\n  }\n\n  post(path, payload) {\n    return this.client.post(path, payload).then(response => response.data);\n  }\n\n  put(path, payload) {\n    return this.client.put(path, payload).then(response => response.data);\n  }\n\n  patch(path, payload) {\n    return this.client.patch(path, payload).then(response => response.data);\n  }\n\n  delete(path) {\n    return this.client.delete(path).then(response => response.data);\n  }\n}\n\nexport default ApiService;\n","import ApiService from './Api';\n\nconst JSON_QUERY = '.json?print=pretty';\nconst BASE_URL = 'https://hacker-news.firebaseio.com/v0';\nconst client = new ApiService({ baseURL: BASE_URL });\n\nconst hackerNewsApi = {};\nconst PAGE_LIMIT = 20;\n\nconst getPageSlice = (limit, page = 0) => ({ begin: page * limit, end: (page + 1) * limit });\nconst getPageValues = ({ begin, end, items }) => items.slice(begin, end);\n\nhackerNewsApi.getTopStoryIds = () => client.get(`/topstories${JSON_QUERY}`);\nhackerNewsApi.getStory = id => client.get(`/item/${id}${JSON_QUERY}`);\nhackerNewsApi.getStoriesByPage = (ids, page) => {\n  const { begin, end } = getPageSlice(PAGE_LIMIT, page);\n  const activeIds = getPageValues({ begin, end, items: ids });\n  const storyPromises = activeIds.map(id => hackerNewsApi.getStory(id));\n  return Promise.all(storyPromises);\n};\n\nexport default hackerNewsApi;\n","import hackerNewsApi from '../../services/hackerNewsApi';\nconst NS ='@hnReader/story';\n\nexport const actionTypes = {\n    FETCH_STORY_IDS_REQUEST: `${NS}/FETCH_STORY_IDS_REQUEST`,\n    FETCH_STORY_IDS_SUCCESS: `${NS}/FETCH_STORY_IDS_SUCCESS`,\n    FETCH_STORY_IDS_FAILURE: `${NS}/FETCH_STORY_IDS_FAILURE`,\n    FETCH_STORIES_REQUEST: `${NS}/FETCH_STORIES_REQUEST`,\n    FETCH_STORIES_SUCCESS: `${NS}/FETCH_STORIES_SUCCESS`,\n    FETCH_STORIES_FAILURE: `${NS}/FETCH_STORIES_FAILURE`,\n};\n\nconst action = (type, payload) => ({ type, payload });\n\nconst actions = {\n    fetchStoryIds: (payload = {}) => {\n      return dispatch => {\n        dispatch(action(actionTypes.FETCH_STORY_IDS_REQUEST, payload));\n        return hackerNewsApi\n          .getTopStoryIds()\n          .then(storyIds => {\n            dispatch(action(actionTypes.FETCH_STORY_IDS_SUCCESS, { storyIds }));\n            dispatch(actions.fetchStories({ storyIds, page: 0 }));\n          })\n          .catch(err => dispatch(action(actionTypes.FETCH_STORY_IDS_FAILURE, err)));\n      };\n    },\n    fetchStories: (payload = {}) => {\n      return dispatch => {\n        const { storyIds, page } = payload;\n        dispatch(action(actionTypes.FETCH_STORIES_REQUEST, payload));\n\n        return hackerNewsApi\n          .getStoriesByPage(storyIds, page)\n          .then(stories => dispatch(action(actionTypes.FETCH_STORIES_SUCCESS, { stories })))\n          .catch(err => dispatch(action(actionTypes.FETCH_STORIES_FAILURE, err)))\n      };\n    }\n};\n\nexport default actions;\n","import { actionTypes } from \"./actions\";\n\nconst getInitialState = () => ({\n  storyIds: [],\n  stories: [],\n  page: 0,\n  isFetching: false,\n  error: \"\"\n});\n\nconst story = (state = getInitialState(), { type, payload }) => {\n  switch (type) {\n    case actionTypes.FETCH_STORY_IDS_REQUEST:\n    case actionTypes.FETCH_STORIES_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case actionTypes.FETCH_STORY_IDS_SUCCESS:\n      return {\n        ...state,\n        ...payload\n      };\n    case actionTypes.FETCH_STORIES_SUCCESS:\n      return {\n        ...state,\n        stories: [...state.stories, ...payload.stories ],\n        page: state.page + 1,\n        isFetching: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default story;\n","import { combineReducers } from 'redux';\nimport app from './app/reducer';\nimport story from './story/reducer';\n\n\nconst rootReducer = combineReducers({\n    app,\n    story\n});\n\nexport default rootReducer;\n","import { applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst middlewareList = [];\nlet devTool = window.devToolsExtension ? window.devToolsExtension() : f => f;\n\nmiddlewareList.push(thunk);\nif (!isProd) {\n  middlewareList.push(createLogger());\n}\n\nconst middleware = compose(applyMiddleware(...middlewareList), devTool);\n\nexport default middleware;\n","import { createStore } from 'redux';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst configureStore = initialState => {\n  const store = createStore(reducer, initialState, middleware);\n  return store;\n};\n\nexport default configureStore;\n","export const colorsDark = {\n  background: '#272727',\n  backgroundSecondary: '#393C3E',\n  text: '#bfbebe',\n  textSecondary: '#848886',\n  border: '#272727',\n};\n\nexport const colorsLight = {\n  background: '#EAEAEA',\n  backgroundSecondary: '#F8F8F8',\n  text: '#848886',\n  textSecondary: '#aaaaaa',\n  border: '#EAEAEA',\n};\n","import url from 'url';\n\nconst getSiteHostname = siteUrl => {\n  let hostname = '';\n\n  if (siteUrl) {\n    if (!siteUrl.includes('//')) {\n      siteUrl = `http://${siteUrl}`;\n    }\n\n    hostname = url.parse(siteUrl).hostname;\n  }\n\n  if (hostname.includes('www.')) {\n    hostname = hostname.split('www.')[1];\n  }\n\n  return hostname;\n};\n\nexport default getSiteHostname;\n","const HN_ROOT = 'https://news.ycombinator.com';\nexport const HN_ITEM = `${HN_ROOT}/item?id=`;\nexport const HN_USER = `${HN_ROOT}/user?id=`;\n\nconst getArticleLink = ({ url, id }) => {\n  const commentUrl = `${HN_ITEM}${id}`;\n  const link = !!url ? url : commentUrl;\n  return link;\n};\n\nexport default getArticleLink;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n  padding: 14px 24px;\n  list-style: none;\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nexport const Title = styled.h3`\n  color: ${({ theme }) => theme.text};\n  margin-top: 0;\n  margin-bottom: 6px;\n  font-weight: 400;\n  font-size: 16px;\n  letter-spacing: 0.4px;\n`;\n\nexport const Host = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 12px;\n`;\n\nexport const ExternalLink = styled.a`\n  color: ${({ theme }) => theme.text};\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  align-items: center;\n  text-decoration: none;\n`;\n\nexport const Description = styled.div`\n  font-size: 14px;\n  color: ${({ theme }) => theme.textSecondary};\n`;\n\nexport const CommentLink = styled.a`\n  color: ${({ theme }) => theme.textSecondary};\n\n  &:visited {\n    color: ${({ theme }) => theme.textSecondary};\n  }\n\n`;\n","import React from 'react';\nimport Timeago from 'timeago.js';\nimport getSiteHostname from '../../utils/getSiteHostname';\nimport getArticleLink, { HN_USER, HN_ITEM } from '../../utils/getArticleLink';\nimport { Item, Title, Host, ExternalLink, Description, CommentLink } from './styles';\n\nconst timeago = Timeago();\nconst LINK_REL = 'nofolow noreferrer noopener';\n\n\nconst ListItem = ({ by, kids =[], id, type, title, url, score, time }) => {\n  const site = getSiteHostname(url) || 'news.ycombinator.com';\n  const link = getArticleLink({ url, id });\n  const commentUrl = `${HN_ITEM}${id}`;\n  const userUrl = `${HN_USER}${by}`;\n\n  return (\n    <Item>\n      <ExternalLink href={link} rel={LINK_REL} target='_blank'>\n        <Title>\n          {title} <Host>({site})</Host>\n        </Title>\n      </ExternalLink>\n      <Description>\n        {score} point by ${' '}\n        <CommentLink href={userUrl} rel={LINK_REL} target='_blank'>\n          {by}\n        </CommentLink>\n        {timeago.format(new Date(time * 1000).toISOString())} {' | '}\n        <CommentLink href={commentUrl} rel={LINK_REL} target='_blank'>\n          {kids.length} Comments\n        </CommentLink>\n      </Description>\n    </Item>\n  );\n};\n\nexport default ListItem;\n","import styled from \"styled-components\";\n\nexport const ListWrapper = styled.div`\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n","import React from \"react\";\nimport ListItem from '../ListItem';\nimport { ListWrapper } from \"./styles\";\n\nconst List = ({ stories }) => (\n  <ListWrapper>\n    {stories && stories.map(story => (\n      <ListItem key={story.id} {...story}/>\n    ))}\n\n  </ListWrapper>\n);\n\nexport default List\n","import styled, { keyframes } from 'styled-components';\n\nconst blink = keyframes`\n  0% {\n    opacity: .2:\n  }\n  20% {\n    opacity: 1;\n  }\n  100% {\n    opacity: .2;\n  }\n`;\n\nexport const Animation = styled.div`\n  text-align: center;\n\n  span {\n    color: ${({ theme }) => theme.textSecondary};\n    display: inline-block;\n    margin-left: 4px;\n    margin-right: 4px;\n    font-size: 80px;\n    line-height: 0.1;\n    animation-name: ${blink};\n    animation-iteration-count: infinite;\n    animation-fill-mode: both;\n  }\n  span:nth-child(2) {\n    animation-delay: 0.2s;\n  }\n  span:nth-child(3) {\n    animation-delay: 0.4s;\n  }\n`;\n\n","import React from 'react';\nimport { Animation } from './styles';\n\nconst Loader = () => (\n  <Animation>\n    <span>.</span>\n    <span>.</span>\n    <span>.</span>\n  </Animation>\n);\n\nexport default Loader;\n","import styled from \"styled-components\";\nimport { tablet } from \"../../styles/mediaQueries\";\n\nexport const Wrapper = styled.div`\n  width: 85%;\n  margin-left: auto;\n  margin-right: auto;\n  height: 100%;\n  overflow: hidden;\n  padding-bottom: 200px;\n\n  ${tablet} {\n    width: 96%;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 20px;\n  font-weight: 300;\n  margin-top: 24px;\n  margin-bottom: 26px;\n`;\n","export const mobile = '@media only screen and (max-width: 480px)';\nexport const tablet = '@media only screen and (max-width: 768px)';\nexport const monitor = '@media only screen and (min-width: 1400px)';\n","import React, { Component } from 'react';\nimport { ThemeProvider } from \"styled-components\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { colorsDark } from \"../../styles/palette\";\nimport List from '../List'\nimport Loader from '../Loader'\n\nimport { Title, Wrapper } from \"./styles\";\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchStoriesFirstPage();\n  }\n\n  fetchStories = () => {\n    const { storyIds, page, fetchStories, isFetching } = this.props;\n    if (!isFetching) {\n      fetchStories({ storyIds, page });\n    }\n  }\n  render() {\n    const { stories, hasMoreStories } = this.props;\n    return (\n      <ThemeProvider theme={colorsDark}>\n        <div>\n          <Wrapper>\n            <Title>Hacker News Reader</Title>\n            <InfiniteScroll\n              dataLength={stories.length}\n              next={this.fetchStories}\n              hasMore={hasMoreStories}\n              loader={<Loader />}\n              style={{\n                height: '100%',\n                overflow: 'visible'\n              }}\n            >\n\n              <List stories={stories}/>\n            </InfiniteScroll>\n          </Wrapper>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import { createSelector } from 'reselect';\n\nexport const storyIdsSelector = state => state.story.storyIds;\nconst storiesSelector = state => state.story.stories;\n\nexport const hasMoreStoriesSelector = createSelector(\n  storyIdsSelector,\n  storiesSelector,\n  (storyIds, stories) => storyIds.length > stories.length\n);\n","import { connect } from 'react-redux';\nimport actions from '../../store/story/actions';\nimport App from './App';\nimport { hasMoreStoriesSelector } from '../../store/story/selectors';\n\nconst mapStateToProps = state => ({\n  stories: state.story.stories,\n  page: state.story.page,\n  storyIds: state.story.storyIds,\n  isFetching: state.story.isFetching,\n  hasMoreStories: hasMoreStoriesSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\n  fetchStories: ({ storyIds, page }) => dispatch(actions.fetchStories({ storyIds, page }))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { createGlobalStyle } from 'styled-components';\nimport { colorsDark } from './palette';\n\nconst setGlobalStyles =\n  createGlobalStyle`\n    * {\n      box-sizing: border-box;\n    }\n    html, body {\n      font-family: Lato,Helvetica-Neue,Helvetica,Arial,sans-serif;\n      width: 100vw;\n      overflow-x: hidden;\n      margin: 0;\n      padding: 0;\n      background-color: ${colorsDark.background};\n    }\n    ul {\n      list-style: none;\n      padding: 0;\n    }\n    a {\n      text-decoration: none;\n      &:visited {\n        color: inherit;\n      }\n    }\n  `;\n\nexport default setGlobalStyles;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport configureStore from './store';\nimport App from './components/App';\nimport SetGlobalStyles from './styles/globals';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst renderApp = () => {\n  const initialState = {};\n  const store = configureStore(initialState);\n  store.dispatch({ type: '@hnReader/@@INIT' });\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <React.Fragment>\n        <SetGlobalStyles />\n        <App />\n      </React.Fragment>\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}